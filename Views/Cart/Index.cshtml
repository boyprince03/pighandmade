@model List<ShoppingPlate.Models.CartItem>
@{
	ViewData["Title"] = "購物車";
	var total = Model.Sum(i => i.Product.Price * i.Quantity);
}

<h2>我的購物車</h2>
@* 主頁面 *@
@if (!Model.Any())
{
		<div class="alert alert-info">購物車是空的</div>
		<div class="d-flex gap-2">
			<a class="btn btn-secondary" href="/">🔙 繼續購物</a>
		</div>
}
else
{
		<table class="table">
			<thead>
				<tr>
					<th>商品</th>
					<th>數量</th>
					<th>單價</th>
					<th>小計</th>
					<th>操作</th>
				</tr>
			</thead>
			<tbody>
			@foreach (var item in Model)
			{
				var subtotal = item.Product.Price * item.Quantity;
					<tr id="cart-item-@item.Id">
						<td>@item.Product.Name</td>
						<td>
							<div class="d-inline-flex align-items-center">
								<input type="number"
									id="qty-@item.Id"
								   class="form-control me-2 quantity-input"
								   data-cart-item-id="@item.Id"
								   value="@item.Quantity"
								   min="1"
								   data-original="@item.Quantity"
								   data-price="@item.Product.Price"
								   data-target="#subtotal-@item.Id"
								   style="width: 80px;" />
							</div>
						</td>
						<td>$@item.Product.Price</td>
						<td>$<span id="subtotal-@item.Id" class="subtotal main-subtotal">@subtotal</span></td>
						<td>
							<button class="btn btn-danger btn-sm remove-cart-item"
									data-cart-item-id="@item.Id"
									data-item-row-id="cart-item-@item.Id">
									🗑移除
							</button>
						</td>
					</tr>
			}
			</tbody>
			<tfoot>
				<tr>
					<td colspan="3" class="text-end"><strong>總金額：</strong></td>
					<td colspan="2"><strong>$<span id="grand-total">@total.ToString("0.00")</span></strong></td>
				</tr>
			</tfoot>
		</table>
		<div class="d-flex gap-2">
			<a class="btn btn-secondary" href="/">繼續購物</a>
			<button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#confirmModal">前往結帳</button>
		</div>
			<div id="cart-remove-alert" class="alert alert-warning position-fixed top-0 end-0 m-4 shadow"
				 role="alert" style="display: none; z-index: 1050;">
				🗑 已從購物車移除商品。
			</div>

}

@* Modal彈出視窗，確認金額及最後數量修改 *@
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<form method="post" asp-action="ConfirmBeforeCheckout">
				<div class="modal-header">
					<h5 class="modal-title" id="confirmModalLabel">確認訂單內容</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="關閉"></button>
				</div>
				<div class="modal-body">
					<table class="table">
						<thead>
							<tr>
								<th>商品</th>
								<th>數量</th>
								<th>單價</th>
								<th>小計</th>
							</tr>
						</thead>
						<tbody id="modal-body">
							@* JS動態填入 *@
						</tbody>
						<tfoot>
							<tr>
								<td colspan="3" class="text-end"><strong>總金額：</strong></td>
								<td><strong>$<span id="modal-grand-total"></span></strong></td>
							</tr>
						</tfoot>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
					<button type="submit" class="btn btn-primary">確認送出並前往結帳</button>
				</div>
			</form>
		</div>
	</div>
</div>
	<script src="~/js/site.js" asp-append-version="true"></script>

@section Scripts {
		<script>
			//主畫面小計+總金額
			function updateMainTotal() {
				let total = 0;
				document.querySelectorAll(".main-subtotal").forEach(function (span) {
					const value = parseFloat(span.innerText) || 0;
					total += value;
				});
				document.getElementById("grand-total").innerText = total.toFixed(2);
			}
			//modal畫面小計+總金額
			function updateModalTotal() {
				let total = 0;
				document.querySelectorAll(".modal-subtotal").forEach(function (span) {
					const value = parseFloat(span.innerText) || 0;
					total += value;
				});
				document.getElementById("modal-grand-total").innerText = total.toFixed(2);
			}
			//更新數量到資料庫
				document.addEventListener("DOMContentLoaded", function () {
		document.querySelectorAll(".quantity-input").forEach(function (input) {
			const original = parseInt(input.dataset.original);
			const cartItemId = input.dataset.cartItemId;

			input.addEventListener("input", function () {
				const price = parseFloat(this.dataset.price);
				const quantity = parseInt(this.value);
				const subtotal = price * (isNaN(quantity) ? 0 : quantity);
				const target = document.querySelector(this.dataset.target);
				if (target) {
					target.innerText = subtotal.toFixed(2);
				}

				// ✅ 自動 AJAX 發送更新請求
				if (!isNaN(quantity) && quantity > 0 && quantity !== original) {
					$.ajax({
						type: "POST",
						url: "/Cart/UpdateQuantity",
						data: { cartItemId: cartItemId, quantity: quantity },
						success: function () {
							// ✅ 更新原始值，避免重複觸發
							input.dataset.original = quantity;

							// ✅ 更新總金額與紅點
							updateMainTotal();
							updateCartCount();
						},
						error: function () {
							alert("❌ 數量更新失敗！");
						}
					});
				}

				updateMainTotal();
				updateModalTotal();
			});
		});

		updateMainTotal();
		updateModalTotal();
	});
	document.addEventListener("DOMContentLoaded", function () {
		const modal = document.getElementById('confirmModal');
		modal.addEventListener('show.bs.modal', function () {
			const modalBody = document.getElementById("modal-body");
			modalBody.innerHTML = ""; // 清空舊內容

			// 從主畫面抓資料
			document.querySelectorAll("tr[id^='cart-item-']").forEach(function (row) {
				const id = row.id.replace("cart-item-", "");
				const name = row.querySelector("td:nth-child(1)").innerText.trim();
				const price = parseFloat(row.querySelector("td:nth-child(3)").innerText.replace('$', ''));
				const quantity = parseInt(row.querySelector(".quantity-input").value);
				const subtotal = price * quantity;

				// 組出 modal 的 row HTML
				const tr = document.createElement("tr");
				tr.innerHTML = `
					<td>${name}</td>
					<td>
						<input type="hidden" name="cartItems[][Id]" value="${id}" />
						<input type="hidden" name="cartItems[][Quantity]" value="${quantity}" />
						<span class="form-control-plaintext">${quantity}</span>
					</td>
					<td>$${price}</td>
					<td>$<span id="modal-subtotal-${id}" class="subtotal modal-subtotal">${subtotal.toFixed(2)}</span></td>`;
					modalBody.appendChild(tr);
			});
			// 重新綁定 modal 數量變動事件
			// bindModalQuantityInputs();
			updateModalTotal();
		});

		// ✅ 將 modal input 綁定即時計算 subtotal
		// function bindModalQuantityInputs() {
		// 	document.querySelectorAll("#modal-body .quantity-input").forEach(function (input) {
		// 		input.addEventListener("input", function () {
		// 			const price = parseFloat(this.dataset.price);
		// 			const quantity = parseInt(this.value);
		// 			const subtotal = isNaN(quantity) ? 0 : price * quantity;
		// 			const target = document.querySelector(this.dataset.target);
		// 			if (target) {
		// 				target.innerText = subtotal.toFixed(2);
		// 			}
		// 			updateModalTotal();
		// 		});
		// 	});
		// }

		// ✅ modal 總金額
		function updateModalTotal() {
			let total = 0;
			document.querySelectorAll(".modal-subtotal").forEach(function (span) {
				const value = parseFloat(span.innerText) || 0;
				total += value;
			});
			document.getElementById("modal-grand-total").innerText = total.toFixed(2);
		}
	});



		</script>

}
